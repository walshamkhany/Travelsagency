{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khalid\\\\Desktop\\\\Travel Agency\\\\travel-agency\\\\src\\\\components\\\\UserInfoPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  gridMargin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  gridbreak: {\n    display: \"none\",\n    [theme.breakpoints.up('md')]: {\n      display: \"block\"\n    }\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: \"#5132e2\",\n    '&$checked': {\n      color: \"linear-gradient(125deg, #5132e2 0%, #6a2ee5 50%, #8329e9 100%)\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this));\nconst countries = [{\n  label: 'United Arab Emirates'\n}, {\n  label: 'Afghanistan'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Australia',\n  suggested: true\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Canada',\n  suggested: true\n}, {\n  label: 'Switzerland'\n}, {\n  label: 'Faroe Islands'\n}, {\n  label: 'France',\n  suggested: true\n}, {\n  label: 'United Kingdom'\n}, {\n  label: 'Greenland'\n}, {\n  label: 'Greece'\n}, {\n  label: 'Hong Kong'\n}, {\n  label: 'Croatia'\n}, {\n  label: 'Haiti'\n}, {\n  label: 'Hungary'\n}, {\n  label: 'Indonesia'\n}, {\n  label: 'Ireland'\n}, {\n  label: 'India'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Iraq'\n}, {\n  label: 'Iran, Islamic Republic of'\n}, {\n  label: 'Iceland'\n}, {\n  label: 'Italy'\n},, {\n  label: 'Jordan'\n}, {\n  label: 'Japan',\n  suggested: true\n}, {\n  label: 'Comoros'\n}, {\n  label: 'Korea, Republic of'\n}, {\n  label: 'Kuwait'\n}, {\n  label: 'Kazakhstan'\n}, {\n  label: 'Lebanon'\n}, {\n  label: 'Sri Lanka'\n}, {\n  label: 'Liberia'\n}, {\n  label: 'Libya'\n}, {\n  label: 'Maldives'\n}, {\n  label: 'New Zealand'\n}, {\n  label: 'Oman'\n}, {\n  label: 'Philippines'\n}, {\n  label: 'Pakistan'\n}, {\n  label: 'Poland'\n}, {\n  label: 'Palestine, State of'\n}, {\n  label: 'Qatar'\n}, {\n  label: 'Reunion'\n}, {\n  label: 'Romania'\n}, {\n  label: 'Serbia'\n}, {\n  label: 'Russian Federation'\n}, {\n  label: 'Saudi Arabia'\n}, {\n  label: 'Sudan'\n}, {\n  label: 'Sweden'\n}, {\n  label: 'Slovenia'\n}, {\n  label: 'Svalbard and Jan Mayen'\n}, {\n  label: 'Slovakia'\n}, {\n  label: 'South Sudan'\n}, {\n  label: 'Turkey'\n}, {\n  label: 'Tuvalu'\n}, {\n  label: 'Taiwan, Province of China'\n}, {\n  label: 'United Republic of Tanzania'\n}, {\n  label: 'Ukraine'\n}, {\n  label: 'United States',\n  suggested: true\n}, {\n  label: 'Uruguay'\n}, {\n  label: 'Uzbekistan'\n}, {\n  label: 'Yemen'\n}];\nconst nationalities = [{\n  label: 'United Arab Emirates'\n}, {\n  label: 'Afghanistan'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Australia',\n  suggested: true\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Canada',\n  suggested: true\n}, {\n  label: 'Switzerland'\n}, {\n  label: 'Faroe Islands'\n}, {\n  label: 'France',\n  suggested: true\n}, {\n  label: 'United Kingdom'\n}, {\n  label: 'Greenland'\n}, {\n  label: 'Greece'\n}, {\n  label: 'Hong Kong'\n}, {\n  label: 'Croatia'\n}, {\n  label: 'Haiti'\n}, {\n  label: 'Hungary'\n}, {\n  label: 'Indonesia'\n}, {\n  label: 'Ireland'\n}, {\n  label: 'India'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Iraq'\n}, {\n  label: 'Iran, Islamic Republic of'\n}, {\n  label: 'Iceland'\n}, {\n  label: 'Italy'\n},, {\n  label: 'Jordan'\n}, {\n  label: 'Japan',\n  suggested: true\n}, {\n  label: 'Comoros'\n}, {\n  label: 'Korea, Republic of'\n}, {\n  label: 'Kuwait'\n}, {\n  label: 'Kazakhstan'\n}, {\n  label: 'Lebanon'\n}, {\n  label: 'Sri Lanka'\n}, {\n  label: 'Liberia'\n}, {\n  label: 'Libya'\n}, {\n  label: 'Maldives'\n}, {\n  label: 'New Zealand'\n}, {\n  label: 'Oman'\n}, {\n  label: 'Philippines'\n}, {\n  label: 'Pakistan'\n}, {\n  label: 'Poland'\n}, {\n  label: 'Palestine, State of'\n}, {\n  label: 'Qatar'\n}, {\n  label: 'Reunion'\n}, {\n  label: 'Romania'\n}, {\n  label: 'Serbia'\n}, {\n  label: 'Russian Federation'\n}, {\n  label: 'Saudi Arabia'\n}, {\n  label: 'Sudan'\n}, {\n  label: 'Sweden'\n}, {\n  label: 'Slovenia'\n}, {\n  label: 'Svalbard and Jan Mayen'\n}, {\n  label: 'Slovakia'\n}, {\n  label: 'South Sudan'\n}, {\n  label: 'Turkey'\n}, {\n  label: 'Tuvalu'\n}, {\n  label: 'Taiwan, Province of China'\n}, {\n  label: 'United Republic of Tanzania'\n}, {\n  label: 'Ukraine'\n}, {\n  label: 'United States',\n  suggested: true\n}, {\n  label: 'Uruguay'\n}, {\n  label: 'Uzbekistan'\n}, {\n  label: 'Yemen'\n}];\nexport default function UserInfoPage(props) {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    Male: false,\n    Female: false\n  });\n\n  const handleChange = event => {\n    state.Female = false;\n    state.Male = false;\n    props.setUserInfo(\"Gender\", event.target.name);\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: \"3\",\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        style: {\n          backgroundColor: \"#6a2ee5\"\n        },\n        className: classes.gridbreak\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h4\",\n              align: \"center\",\n              children: \"Apply now to work in Dubai\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            className: classes.gridMargin,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"outlined-firstname-input\",\n                label: \"First Name\",\n                type: \"name\",\n                autoComplete: \"current-firstname\",\n                variant: \"outlined\",\n                fullWidth: true,\n                onChange: e => props.setUserInfo(\"firstname\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"outlined-lastname-input\",\n                label: \"Last Name\",\n                type: \"name\",\n                autoComplete: \"current-lastname\",\n                variant: \"outlined\",\n                fullWidth: true,\n                onChange: e => props.setUserInfo(\"lastname\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            className: classes.gridMargin,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.container,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"date\",\n                label: \"Date of Birth\",\n                type: \"date\",\n                variant: \"outlined\",\n                defaultValue: \"\",\n                fullWidth: true,\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => props.setUserInfo(\"DateOfBirth\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: 1\n                },\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                required: true,\n                row: true,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n                    checked: state.Male,\n                    onChange: handleChange,\n                    name: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 42\n                  }, this),\n                  label: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n                    checked: state.Female,\n                    onChange: handleChange,\n                    name: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 42\n                  }, this),\n                  label: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            className: classes.gridMargin,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              className: classes.container,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"country-select-demo\",\n                fullWidth: true,\n                options: countries,\n                classes: {\n                  option: classes.option\n                },\n                getOptionLabel: option => option.label,\n                renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 33\n                }, this),\n                onChange: e => props.setUserInfo(\"Nationality\", e.target.innerText),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  ...params,\n                  label: \"Nationality\",\n                  variant: \"outlined\",\n                  inputProps: { ...params.inputProps,\n                    autoComplete: 'new-password' // disable autocomplete and autofill\n\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"country-select-demo\",\n                fullWidth: true,\n                options: nationalities,\n                classes: {\n                  option: classes.option\n                },\n                getOptionLabel: option => option.label,\n                renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 33\n                }, this),\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  ...params,\n                  label: \"Country of Residence\",\n                  variant: \"outlined\",\n                  inputProps: { ...params.inputProps,\n                    autoComplete: 'new-password' // disable autocomplete and autofill\n\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 33\n                }, this),\n                onChange: e => props.setUserInfo(\"CountryOfResidence\", e.target.innerText)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"left\",\n              children: \"How can we contact you?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            className: classes.gridMargin,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"outlined-number-input\",\n                label: \"Contact number\",\n                type: \"phone\",\n                autoComplete: \"current-number\",\n                variant: \"outlined\",\n                fullWidth: true,\n                onChange: e => props.setUserInfo(\"ContactNumber\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"outlined-email-input\",\n                label: \"Email address\",\n                type: \"email\",\n                autoComplete: \"current-email\",\n                variant: \"outlined\",\n                fullWidth: true,\n                onChange: e => props.setUserInfo(\"Email\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserInfoPage, \"r9qngn204duX1e3WfoXAPGe/Quk=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserInfoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoPage\");","map":{"version":3,"sources":["C:/Users/khalid/Desktop/Travel Agency/travel-agency/src/components/UserInfoPage.js"],"names":["React","Typography","Grid","TextField","FormGroup","FormControlLabel","makeStyles","withStyles","Checkbox","Autocomplete","useStyles","theme","root","flexGrow","gridMargin","marginTop","spacing","marginBottom","container","display","flexWrap","gridbreak","breakpoints","up","GreenCheckbox","color","checked","props","countries","label","suggested","nationalities","UserInfoPage","classes","state","setState","useState","Male","Female","handleChange","event","setUserInfo","target","name","backgroundColor","e","value","shrink","margin","option","innerText","params","inputProps","autoComplete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from  '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n\r\n      },\r\n    gridMargin:\r\n    {   \r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n    gridbreak:\r\n    {    display:\"none\",\r\n        [theme.breakpoints.up('md')]: {\r\n            display:\"block\",\r\n          },\r\n    }\r\n\r\n}));\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#5132e2\",\r\n      '&$checked': {\r\n        color: \"linear-gradient(125deg, #5132e2 0%, #6a2ee5 50%, #8329e9 100%)\",\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst countries  = [\r\n    { label: 'United Arab Emirates' },\r\n    { label: 'Afghanistan'},\r\n    { label: 'Austria'},\r\n    { label: 'Australia', suggested: true },\r\n    { label: 'Belgium'},\r\n    { label: 'Brazil'},\r\n    { label: 'Bouvet Island'},\r\n    { label: 'Canada', suggested: true },\r\n    { label: 'Switzerland'},\r\n    { label: 'Faroe Islands' },\r\n    { label: 'France' , suggested: true },\r\n    { label: 'United Kingdom'},\r\n    { label: 'Greenland' },\r\n    { label: 'Greece'},\r\n    { label: 'Hong Kong' },\r\n    { label: 'Croatia' },\r\n    { label: 'Haiti' },\r\n    { label: 'Hungary'},\r\n    { label: 'Indonesia'},\r\n    { label: 'Ireland' },\r\n    { label: 'India'},\r\n    { label: 'British Indian Ocean Territory' },\r\n    { label: 'Iraq' },\r\n    { label: 'Iran, Islamic Republic of'},\r\n    { label: 'Iceland' },\r\n    { label: 'Italy'},,\r\n    { label: 'Jordan' },\r\n    { label: 'Japan', suggested: true },\r\n    { label: 'Comoros' },\r\n    { label: 'Korea, Republic of'},\r\n    { label: 'Kuwait' },\r\n    { label: 'Kazakhstan'},\r\n    { label: 'Lebanon' },\r\n    { label: 'Sri Lanka'},\r\n    { label: 'Liberia' },\r\n    { label: 'Libya' },\r\n    { label: 'Maldives' },\r\n    { label: 'New Zealand'},\r\n    { label: 'Oman' },\r\n    { label: 'Philippines'},\r\n    { label: 'Pakistan'},\r\n    { label: 'Poland'},\r\n    { label: 'Palestine, State of' },\r\n    { label: 'Qatar' },\r\n    { label: 'Reunion' },\r\n    { label: 'Romania'},\r\n    { label: 'Serbia' },\r\n    { label: 'Russian Federation'},\r\n    { label: 'Saudi Arabia' },\r\n    { label: 'Sudan' },\r\n    { label: 'Sweden'},\r\n    { label: 'Slovenia' },\r\n    { label: 'Svalbard and Jan Mayen'},\r\n    { label: 'Slovakia' },\r\n    { label: 'South Sudan' },\r\n    { label: 'Turkey'},\r\n    { label: 'Tuvalu' },\r\n    { label: 'Taiwan, Province of China' },\r\n    { label: 'United Republic of Tanzania' },\r\n    { label: 'Ukraine' },\r\n    { label: 'United States',suggested: true },\r\n    { label: 'Uruguay' },\r\n    { label: 'Uzbekistan'},\r\n    { label: 'Yemen' },\r\n  ];\r\n  const nationalities  = [\r\n    { label: 'United Arab Emirates' },\r\n    { label: 'Afghanistan'},\r\n    { label: 'Austria'},\r\n    { label: 'Australia', suggested: true },\r\n    { label: 'Belgium'},\r\n    { label: 'Brazil'},\r\n    { label: 'Bouvet Island'},\r\n    { label: 'Canada', suggested: true },\r\n    { label: 'Switzerland'},\r\n    { label: 'Faroe Islands' },\r\n    { label: 'France' , suggested: true },\r\n    { label: 'United Kingdom'},\r\n    { label: 'Greenland' },\r\n    { label: 'Greece'},\r\n    { label: 'Hong Kong' },\r\n    { label: 'Croatia' },\r\n    { label: 'Haiti' },\r\n    { label: 'Hungary'},\r\n    { label: 'Indonesia'},\r\n    { label: 'Ireland' },\r\n    { label: 'India'},\r\n    { label: 'British Indian Ocean Territory' },\r\n    { label: 'Iraq' },\r\n    { label: 'Iran, Islamic Republic of'},\r\n    { label: 'Iceland' },\r\n    { label: 'Italy'},,\r\n    { label: 'Jordan' },\r\n    { label: 'Japan', suggested: true },\r\n    { label: 'Comoros' },\r\n    { label: 'Korea, Republic of'},\r\n    { label: 'Kuwait' },\r\n    { label: 'Kazakhstan'},\r\n    { label: 'Lebanon' },\r\n    { label: 'Sri Lanka'},\r\n    { label: 'Liberia' },\r\n    { label: 'Libya' },\r\n    { label: 'Maldives' },\r\n    { label: 'New Zealand'},\r\n    { label: 'Oman' },\r\n    { label: 'Philippines'},\r\n    { label: 'Pakistan'},\r\n    { label: 'Poland'},\r\n    { label: 'Palestine, State of' },\r\n    { label: 'Qatar' },\r\n    { label: 'Reunion' },\r\n    { label: 'Romania'},\r\n    { label: 'Serbia' },\r\n    { label: 'Russian Federation'},\r\n    { label: 'Saudi Arabia' },\r\n    { label: 'Sudan' },\r\n    { label: 'Sweden'},\r\n    { label: 'Slovenia' },\r\n    { label: 'Svalbard and Jan Mayen'},\r\n    { label: 'Slovakia' },\r\n    { label: 'South Sudan' },\r\n    { label: 'Turkey'},\r\n    { label: 'Tuvalu' },\r\n    { label: 'Taiwan, Province of China' },\r\n    { label: 'United Republic of Tanzania' },\r\n    { label: 'Ukraine' },\r\n    { label: 'United States',suggested: true },\r\n    { label: 'Uruguay' },\r\n    { label: 'Uzbekistan'},\r\n    { label: 'Yemen' },\r\n  ];\r\n\r\n\r\n\r\nexport default function UserInfoPage(props) {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        Male: false,\r\n        Female: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        state.Female = false;\r\n        state.Male = false;\r\n        props.setUserInfo(\"Gender\", event.target.name)\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    \r\n\r\n  return (\r\n    <React.Fragment>\r\n         <Grid container spacing=\"3\" justify =\"center\" >\r\n            <Grid item xs= {12} md = {6} style = {{backgroundColor: \"#6a2ee5\"}} className ={classes.gridbreak}>\r\n              {/* ADD BACKGOUND */}\r\n            </Grid>\r\n            <Grid item xs= {12} md = {6}>\r\n            <div className={classes.root}>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Apply now to work in Dubai\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} className={classes.gridMargin}> \r\n                    <Grid item xs={12} md={6 }>\r\n                        <TextField  \r\n                            required\r\n                            id=\"outlined-firstname-input\"\r\n                            label=\"First Name\"\r\n                            type=\"name\"\r\n                            autoComplete=\"current-firstname\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange = {e => props.setUserInfo(\"firstname\", e.target.value)}\r\n                         \r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6 }> \r\n                            <TextField\r\n                            required\r\n                            id=\"outlined-lastname-input\"\r\n                            label=\"Last Name\"\r\n                            type=\"name\"\r\n                            autoComplete=\"current-lastname\"\r\n                            variant=\"outlined\"\r\n                            fullWidth \r\n                            onChange = {e => props.setUserInfo(\"lastname\", e.target.value)}\r\n                        />\r\n                     </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} className={classes.gridMargin}> \r\n                    <Grid item xs={12} md={6 }className={classes.container}>\r\n                        <TextField\r\n                        required\r\n                                id=\"date\"\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                defaultValue=\"\"\r\n                                fullWidth \r\n                        \r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                onChange = {e => props.setUserInfo(\"DateOfBirth\", e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6 }> \r\n                     <p style= {{margin:1}}>Gender</p>\r\n                        <FormGroup required row>\r\n                            <FormControlLabel\r\n                                control={<GreenCheckbox  checked={state.Male } onChange={handleChange} name=\"Male\" />}\r\n                                label=\"Male\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<GreenCheckbox  checked={state.Female} onChange={handleChange} name=\"Female\" />}\r\n                                label=\"Female\"\r\n                            />\r\n                        </FormGroup>\r\n                     </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={1} className={classes.gridMargin}> \r\n                    <Grid item xs={12} md={6 }className={classes.container}>\r\n                        <Autocomplete\r\n                            id=\"country-select-demo\"\r\n                            fullWidth\r\n                            options={countries}\r\n                            classes={{\r\n                                option: classes.option,\r\n                            }}\r\n                            \r\n                            getOptionLabel={(option) => option.label}\r\n                            renderOption={(option) => (\r\n                                <React.Fragment>\r\n                    \r\n                                {option.label} \r\n                                </React.Fragment>\r\n                            )}\r\n                            onChange = {e => props.setUserInfo(\"Nationality\", e.target.innerText)}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                required\r\n                                {...params}\r\n                                label=\"Nationality\"\r\n                                variant=\"outlined\"\r\n                                \r\n                                inputProps={{\r\n                                    ...params.inputProps,\r\n                                    autoComplete: 'new-password', // disable autocomplete and autofill\r\n                                    \r\n                                }}\r\n                                />\r\n                            )}\r\n\r\n             \r\n                            />\r\n                        </Grid>\r\n                    <Grid item xs={12} md={6 }> \r\n                        <Autocomplete\r\n                            id=\"country-select-demo\"\r\n                            fullWidth\r\n                            options={nationalities}\r\n                            classes={{\r\n                                option: classes.option,\r\n                            }}\r\n                            \r\n                            getOptionLabel={(option) => option.label}\r\n                            renderOption={(option) => (\r\n                                <React.Fragment>\r\n                    \r\n                                {option.label} \r\n                                </React.Fragment>\r\n                            )}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                required\r\n                                {...params}\r\n                                label=\"Country of Residence\"\r\n                                variant=\"outlined\"\r\n                                inputProps={{\r\n                                    ...params.inputProps,\r\n                                    autoComplete: 'new-password', // disable autocomplete and autofill\r\n                                }}\r\n                                />\r\n                            )}\r\n                            onChange = {e => props.setUserInfo(\"CountryOfResidence\", e.target.innerText)}\r\n                        />\r\n    \r\n                     </Grid>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"left\">\r\n                        How can we contact you?\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container spacing={1} className={classes.gridMargin}> \r\n                    <Grid item xs={12} md={6 }>\r\n                        <TextField\r\n                        required\r\n                            id=\"outlined-number-input\"\r\n                            label=\"Contact number\"\r\n                            type=\"phone\"\r\n                            autoComplete=\"current-number\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange = {e => props.setUserInfo(\"ContactNumber\", e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6 }> \r\n                            <TextField\r\n                            required\r\n                            id=\"outlined-email-input\"\r\n                            label=\"Email address\"\r\n                            type=\"email\"\r\n                            autoComplete=\"current-email\"\r\n                            variant=\"outlined\"\r\n                            fullWidth \r\n\r\n                            onChange = {e => props.setUserInfo(\"Email\", e.target.value)}\r\n                        />\r\n                     </Grid>\r\n                </Grid> \r\n\r\n            </div>\r\n        </Grid>\r\n\r\n          </Grid>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}